events {}

http {
    server {
        listen 443 ssl;
        server_name mainsite.localhost;

        ssl_certificate         /etc/ssl/certs/mainsite.localhost+1.pem;
        ssl_certificate_key     /etc/ssl/certs/mainsite.localhost+1-key.pem;

        location / {
            proxy_pass http://mainsite:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 443 ssl;
        server_name scrolladex.localhost;
        
        ssl_certificate         /etc/ssl/certs/mainsite.localhost+1.pem;
        ssl_certificate_key     /etc/ssl/certs/mainsite.localhost+1-key.pem;

        location /api {
            if ($request_method = 'OPTIONS') {
                # CORS headers for OPTIONS preflight response
                add_header 'Access-Control-Allow-Origin' '*'; # Be more restrictive with production
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            # CORS headers for regular requests
            add_header 'Access-Control-Allow-Origin' '*'; # Be more restrictive with production
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

            proxy_pass http://backend:3333;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host scrolladex.localhost;
            proxy_cache_bypass $http_upgrade;
        }

        location /public {
            alias /usr/src/nginx/public;
        }

        location /_next/webpack-hmr {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}

